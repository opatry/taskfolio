{
    "libraries": [
        {
            "uniqueId": "androidx.activity:activity",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.11.0-rc01",
            "description": "Provides the base Activity subclass and the relevant hooks to build a composable structure on top.",
            "name": "Activity",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.activity:activity-compose",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.11.0-rc01",
            "description": "Compose integration with Activity",
            "name": "Activity Compose",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.activity:activity-ktx",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.11.0-rc01",
            "description": "Kotlin extensions for 'activity' artifact",
            "name": "Activity Kotlin Extensions",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.annotation:annotation",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.9.1",
            "description": "Provides source annotations for tooling and readability.",
            "name": "Annotation",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.annotation:annotation-experimental",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.4.1",
            "description": "Java annotation for use on unstable Android API surfaces. When used in conjunction with the Experimental annotation lint checks, this annotation provides functional parity with Kotlin's Experimental annotation.",
            "name": "Experimental annotation",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.appcompat:appcompat",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.7.0",
            "description": "Provides backwards-compatible implementations of UI-related Android SDK functionality, including dark mode and Material theming.",
            "name": "AppCompat",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.appcompat:appcompat-resources",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.7.0",
            "description": "Provides backward-compatible implementations of resource-related Android SDKfunctionality, including color state list theming.",
            "name": "AppCompat Resources",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.arch.core:core-common",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.2.0",
            "description": "Android Arch-Common",
            "name": "Android Arch-Common",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.arch.core:core-runtime",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.2.0",
            "description": "Android Arch-Runtime",
            "name": "Android Arch-Runtime",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.autofill:autofill",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.0",
            "description": "AndroidX Autofill",
            "name": "AndroidX Autofill",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.collection:collection",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.5.0",
            "description": "Standalone efficient collections.",
            "name": "collections",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.collection:collection-ktx",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.5.0",
            "description": "Kotlin extensions for 'collection' artifact",
            "name": "Collections Kotlin Extensions",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.animation:animation",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose animation library",
            "name": "Compose Animation",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.animation:animation-core",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Animation engine and animation primitives that are the building blocks of the Compose animation library",
            "name": "Compose Animation Core",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.foundation:foundation",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Higher level abstractions of the Compose UI primitives. This library is design system agnostic, providing the high-level building blocks for both application and design-system developers",
            "name": "Compose Foundation",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.foundation:foundation-layout",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose layout implementations",
            "name": "Compose Layouts",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.material3.adaptive:adaptive",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.0",
            "description": "Compose Material Design Adaptive Library",
            "name": "Material Adaptive",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.material3:material3",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.3.2",
            "description": "Compose Material You Design Components library",
            "name": "Compose Material3 Components",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.material3:material3-adaptive-navigation-suite",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.3.2",
            "description": "Compose Material Design Adaptive Navigation Suite Library",
            "name": "Material Adaptive Navigation Suite",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.material:material",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.6.0",
            "description": "Compose Material Design Components library",
            "name": "Compose Material Components",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.material:material-icons-core",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.6.0",
            "description": "Compose Material Design core icons. This module contains the most commonly used set of Material icons.",
            "name": "Compose Material Icons Core",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.material:material-ripple",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0-rc03",
            "description": "Material ripple used to build interactive components",
            "name": "Compose Material Ripple",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.runtime:runtime",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Tree composition support for code generated by the Compose compiler plugin and corresponding public API",
            "name": "Compose Runtime",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.runtime:runtime-saveable",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose components that allow saving and restoring the local ui state",
            "name": "Compose Saveable",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.ui:ui",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose UI primitives. This library contains the primitives that form the Compose UI Toolkit, such as drawing, measurement and layout.",
            "name": "Compose UI",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.ui:ui-geometry",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose classes related to dimensions without units",
            "name": "Compose Geometry",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.ui:ui-graphics",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose graphics",
            "name": "Compose Graphics",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.ui:ui-text",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose Text primitives and utilities",
            "name": "Compose UI Text",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.ui:ui-tooling",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose tooling library. This library exposes information to our tools for better IDE support.",
            "name": "Compose Tooling",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.ui:ui-tooling-data",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose tooling library data. This library provides data about compose for different tooling purposes.",
            "name": "Compose Tooling Data",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.ui:ui-tooling-preview",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose tooling library API. This library provides the API required to declare @Preview composables in user apps.",
            "name": "Compose UI Preview Tooling",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.ui:ui-unit",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Compose classes for simple units",
            "name": "Compose Unit",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.compose.ui:ui-util",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.0",
            "description": "Internal Compose utilities used by other modules",
            "name": "Compose Util",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.concurrent:concurrent-futures",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.0",
            "description": "Androidx implementation of Guava's ListenableFuture",
            "name": "AndroidX Futures",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.core:core",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.15.0",
            "description": "Provides backward-compatible implementations of Android platform APIs and features.",
            "name": "Core",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.core:core-ktx",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.15.0",
            "description": "Kotlin extensions for 'core' artifact",
            "name": "Core Kotlin Extensions",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.core:core-viewtree",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.0",
            "description": "Provides ViewTree extensions packaged for use by other core androidx libraries",
            "name": "androidx.core:core-viewtree",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.cursoradapter:cursoradapter",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.0",
            "description": "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren't a part of the framework APIs. Compatible on devices running API 14 or later.",
            "name": "Support Cursor Adapter",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.customview:customview",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.0",
            "description": "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren't a part of the framework APIs. Compatible on devices running API 14 or later.",
            "name": "Support Custom View",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.customview:customview-poolingcontainer",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.0",
            "description": "Utilities for listening to the lifecycle of containers that manage their child Views' lifecycle, such as RecyclerView",
            "name": "androidx.customview:poolingcontainer",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.datastore:datastore",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.3",
            "description": "Android DataStore - contains the underlying store used by each serialization method along with components that require an Android dependency",
            "name": "DataStore",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.datastore:datastore-core",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.3",
            "description": "Android DataStore Core - contains the underlying store used by each serialization method",
            "name": "DataStore Core",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.datastore:datastore-core-okio",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.3",
            "description": "Android DataStore Core Okio- contains APIs to use datastore-core in multiplatform via okio",
            "name": "DataStore Core Okio",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.datastore:datastore-preferences",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.3",
            "description": "Android Preferences DataStore",
            "name": "Preferences DataStore",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.datastore:datastore-preferences-core",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.3",
            "description": "Android Preferences DataStore without the Android Dependencies",
            "name": "Preferences DataStore Core",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.datastore:datastore-preferences-external-protobuf",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.3",
            "description": "Repackaged proto-lite dependency for use by datastore preferences",
            "name": "Preferences External Protobuf",
            "licenses": [
                "BSD-3-Clause"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.datastore:datastore-preferences-proto",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.3",
            "description": "Jarjar the generated proto for use by datastore-preferences.",
            "name": "Preferences DataStore Proto",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.drawerlayout:drawerlayout",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.0",
            "description": "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren't a part of the framework APIs. Compatible on devices running API 14 or later.",
            "name": "Support Drawer Layout",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.emoji2:emoji2",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.4.0",
            "description": "Core library to enable emoji compatibility in Kitkat and newer devices to avoid the empty emoji characters.",
            "name": "Emoji2",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.emoji2:emoji2-views-helper",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.4.0",
            "description": "Provide helper classes for Emoji2 views.",
            "name": "Emoji2 Views Helper",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.exifinterface:exifinterface",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.3.7",
            "description": "Android Support ExifInterface",
            "name": "Support ExifInterface",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.fragment:fragment",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.5",
            "description": "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren't a part of the framework APIs. Compatible on devices running API 14 or later.",
            "name": "fragment",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.fragment:fragment-ktx",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.8.5",
            "description": "Kotlin extensions for 'fragment' artifact",
            "name": "Fragment Kotlin Extensions",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.graphics:graphics-path",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.1",
            "description": "Query segment data for android.graphics.Path objects",
            "name": "Android Graphics Path",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.interpolator:interpolator",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.0",
            "description": "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren't a part of the framework APIs. Compatible on devices running API 14 or later.",
            "name": "Support Interpolators",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-common",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Android Lifecycle-Common",
            "name": "Lifecycle-Common",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-common-java8",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Android Lifecycle-Common for Java 8 Language",
            "name": "Lifecycle-Common for Java 8",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-livedata-core",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Android Lifecycle LiveData Core",
            "name": "Lifecycle LiveData Core",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-livedata-core-ktx",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Kotlin extensions for 'livedata-core' artifact",
            "name": "LiveData Core Kotlin Extensions",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-process",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Android Lifecycle Process",
            "name": "Lifecycle Process",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-runtime",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Android Lifecycle Runtime",
            "name": "Lifecycle Runtime",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-runtime-compose",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Compose integration with Lifecycle",
            "name": "Lifecycle Runtime Compose",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-runtime-ktx",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Kotlin extensions for 'lifecycle' artifact",
            "name": "Lifecycle Kotlin Extensions",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-viewmodel",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Android Lifecycle ViewModel",
            "name": "Lifecycle ViewModel",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-viewmodel-compose",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Compose integration with Lifecycle ViewModel",
            "name": "Lifecycle ViewModel Compose",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-viewmodel-ktx",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Kotlin extensions for 'viewmodel' artifact",
            "name": "Lifecycle ViewModel Kotlin Extensions",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.lifecycle:lifecycle-viewmodel-savedstate",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha12",
            "description": "Android Lifecycle ViewModel",
            "name": "Lifecycle ViewModel with SavedState",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.loader:loader",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.0",
            "description": "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren't a part of the framework APIs. Compatible on devices running API 14 or later.",
            "name": "Support loader",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.navigation:navigation-common",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha08",
            "description": "Android Navigation-Common",
            "name": "Navigation Common",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.navigation:navigation-compose",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha08",
            "description": "Compose integration with Navigation",
            "name": "Compose Navigation",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.navigation:navigation-runtime",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.9.0-alpha08",
            "description": "Android Navigation-Runtime",
            "name": "Navigation Runtime",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.profileinstaller:profileinstaller",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.4.1",
            "description": "Allows libraries to prepopulate ahead of time compilation traces to be read by ART",
            "name": "Profile Installer",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.resourceinspection:resourceinspection-annotation",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.1",
            "description": "Annotation processors for Android resource and layout inspection",
            "name": "Android Resource Inspection - Annotations",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.room:room-common",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.7.1",
            "description": "Android Room-Common",
            "name": "Room-Common",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.room:room-runtime",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.7.1",
            "description": "Android Room-Runtime",
            "name": "Room-Runtime",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.savedstate:savedstate",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.3.0-alpha10",
            "description": "Android Lifecycle Saved State",
            "name": "Saved State",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.savedstate:savedstate-ktx",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.3.0-alpha10",
            "description": "Kotlin extensions for 'savedstate' artifact",
            "name": "SavedState Kotlin Extensions",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.sqlite:sqlite",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.5.0",
            "description": "SQLite API",
            "name": "SQLite",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.sqlite:sqlite-bundled",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.5.0",
            "description": "The implementation of SQLite library using the bundled SQLite.",
            "name": "SQLite Bundled Integration",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.sqlite:sqlite-framework",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "2.5.0",
            "description": "The implementation of SQLite library using the framework code.",
            "name": "SQLite Framework Integration",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.startup:startup-runtime",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.2.0",
            "description": "Android App Startup Runtime",
            "name": "Startup Runtime",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.tracing:tracing",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.2.0",
            "description": "Android Tracing",
            "name": "Android Tracing",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.vectordrawable:vectordrawable",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.0",
            "description": "Android Support VectorDrawable",
            "name": "Support VectorDrawable",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.vectordrawable:vectordrawable-animated",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.0",
            "description": "Android Support AnimatedVectorDrawable",
            "name": "Support AnimatedVectorDrawable",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.versionedparcelable:versionedparcelable",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.1.1",
            "description": "Provides a stable but relatively compact binary serialization format that can be passed across processes or persisted safely.",
            "name": "VersionedParcelable",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.viewpager:viewpager",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.0",
            "description": "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren't a part of the framework APIs. Compatible on devices running API 14 or later.",
            "name": "Support View Pager",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.window.extensions.core:core",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.0.0",
            "description": "The Core APIs for Window Manager Library Extensions",
            "name": "Jetpack WindowManager library Core Extensions",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "androidx.window:window",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.3.0",
            "description": "WindowManager Jetpack library. Currently only provides additional functionality on foldable devices.",
            "name": "WindowManager",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "androidx.window:window-core",
            "developers": [
                {
                    "name": "The Android Open Source Project"
                }
            ],
            "artifactVersion": "1.3.0",
            "description": "WindowManager Core Library.",
            "name": "WindowManager Core",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "The Android Open Source Project"
            }
        },
        {
            "uniqueId": "co.touchlab:stately-concurrency",
            "developers": [
                {
                    "name": "Kevin Galligan"
                }
            ],
            "artifactVersion": "2.1.0",
            "description": "Multithreaded Kotlin Multiplatform Utilities",
            "name": "Stately",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.accompanist:accompanist-drawablepainter",
            "developers": [
                {
                    "name": "Google"
                }
            ],
            "artifactVersion": "0.36.0",
            "description": "Utilities for Jetpack Compose",
            "name": "Accompanist Drawable Painter library",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.android.datatransport:transport-api",
            "developers": [
                
            ],
            "artifactVersion": "3.2.0",
            "description": "",
            "name": "com.google.android.datatransport:transport-api",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.android.datatransport:transport-backend-cct",
            "developers": [
                
            ],
            "artifactVersion": "3.3.0",
            "description": "",
            "name": "com.google.android.datatransport:transport-backend-cct",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.android.datatransport:transport-runtime",
            "developers": [
                
            ],
            "artifactVersion": "3.3.0",
            "description": "",
            "name": "com.google.android.datatransport:transport-runtime",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.android.gms:play-services-auth",
            "developers": [
                
            ],
            "artifactVersion": "21.3.0",
            "description": "",
            "name": "play-services-auth",
            "licenses": [
                "ASDKL"
            ]
        },
        {
            "uniqueId": "com.google.android.gms:play-services-auth-api-phone",
            "developers": [
                
            ],
            "artifactVersion": "18.0.2",
            "description": "",
            "name": "play-services-auth-api-phone",
            "licenses": [
                "ASDKL"
            ]
        },
        {
            "uniqueId": "com.google.android.gms:play-services-auth-base",
            "developers": [
                
            ],
            "artifactVersion": "18.0.10",
            "description": "",
            "name": "play-services-auth-base",
            "licenses": [
                "ASDKL"
            ]
        },
        {
            "uniqueId": "com.google.android.gms:play-services-base",
            "developers": [
                
            ],
            "artifactVersion": "18.5.0",
            "description": "",
            "name": "play-services-base",
            "licenses": [
                "ASDKL"
            ]
        },
        {
            "uniqueId": "com.google.android.gms:play-services-basement",
            "developers": [
                
            ],
            "artifactVersion": "18.4.0",
            "description": "",
            "name": "play-services-basement",
            "licenses": [
                "ASDKL"
            ]
        },
        {
            "uniqueId": "com.google.android.gms:play-services-fido",
            "developers": [
                
            ],
            "artifactVersion": "20.0.1",
            "description": "",
            "name": "play-services-fido",
            "licenses": [
                "ASDKL"
            ]
        },
        {
            "uniqueId": "com.google.android.gms:play-services-tasks",
            "developers": [
                
            ],
            "artifactVersion": "18.2.0",
            "description": "",
            "name": "play-services-tasks",
            "licenses": [
                "ASDKL"
            ]
        },
        {
            "uniqueId": "com.google.errorprone:error_prone_annotations",
            "developers": [
                {
                    "name": "Eddie Aftandilian"
                }
            ],
            "artifactVersion": "2.26.0",
            "description": "Error Prone is a static analysis tool for Java that catches common programming mistakes at compile-time.",
            "name": "error-prone annotations",
            "licenses": [
                "Apache-2.0"
            ],
            "organization": {
                "name": "Google LLC"
            }
        },
        {
            "uniqueId": "com.google.firebase:firebase-annotations",
            "developers": [
                
            ],
            "artifactVersion": "16.2.0",
            "description": "",
            "name": "firebase-annotations",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-common",
            "developers": [
                
            ],
            "artifactVersion": "21.0.0",
            "description": "",
            "name": "com.google.firebase:firebase-common",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-common-ktx",
            "developers": [
                
            ],
            "artifactVersion": "21.0.0",
            "description": "",
            "name": "com.google.firebase:firebase-common-ktx",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-components",
            "developers": [
                
            ],
            "artifactVersion": "18.0.0",
            "description": "",
            "name": "com.google.firebase:firebase-components",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-config-interop",
            "developers": [
                
            ],
            "artifactVersion": "16.0.1",
            "description": "",
            "name": "com.google.firebase:firebase-config-interop",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-crashlytics",
            "developers": [
                
            ],
            "artifactVersion": "19.4.3",
            "description": "",
            "name": "com.google.firebase:firebase-crashlytics",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-datatransport",
            "developers": [
                
            ],
            "artifactVersion": "19.0.0",
            "description": "",
            "name": "com.google.firebase:firebase-datatransport",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-encoders",
            "developers": [
                
            ],
            "artifactVersion": "17.0.0",
            "description": "",
            "name": "firebase-encoders",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-encoders-json",
            "developers": [
                
            ],
            "artifactVersion": "18.0.1",
            "description": "",
            "name": "com.google.firebase:firebase-encoders-json",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-encoders-proto",
            "developers": [
                
            ],
            "artifactVersion": "16.0.0",
            "description": "",
            "name": "firebase-encoders-proto",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-installations",
            "developers": [
                
            ],
            "artifactVersion": "18.0.0",
            "description": "",
            "name": "com.google.firebase:firebase-installations",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-installations-interop",
            "developers": [
                
            ],
            "artifactVersion": "17.2.0",
            "description": "",
            "name": "com.google.firebase:firebase-installations-interop",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-measurement-connector",
            "developers": [
                
            ],
            "artifactVersion": "20.0.1",
            "description": "",
            "name": "firebase-measurement-connector",
            "licenses": [
                "ASDKL"
            ]
        },
        {
            "uniqueId": "com.google.firebase:firebase-sessions",
            "developers": [
                
            ],
            "artifactVersion": "2.1.1",
            "description": "",
            "name": "com.google.firebase:firebase-sessions",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.google.guava:listenablefuture",
            "developers": [
                {
                    "name": "Kevin Bourrillion"
                }
            ],
            "artifactVersion": "1.0",
            "description": "Contains Guava's com.google.common.util.concurrent.ListenableFuture class,\n    without any of its other classes -- but is also available in a second\n    \"version\" that omits the class to avoid conflicts with the copy in Guava\n    itself. The idea is:\n\n    - If users want only ListenableFuture, they depend on listenablefuture-1.0.\n\n    - If users want all of Guava, they depend on guava, which, as of Guava\n    27.0, depends on\n    listenablefuture-9999.0-empty-to-avoid-conflict-with-guava. The 9999.0-...\n    version number is enough for some build systems (notably, Gradle) to select\n    that empty artifact over the \"real\" listenablefuture-1.0 -- avoiding a\n    conflict with the copy of ListenableFuture in guava itself. If users are\n    using an older version of Guava or a build system other than Gradle, they\n    may see class conflicts. If so, they can solve them by manually excluding\n    the listenablefuture artifact or manually forcing their build systems to\n    use 9999.0-....",
            "name": "Guava ListenableFuture only",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.mikepenz:aboutlibraries-core",
            "developers": [
                {
                    "name": "Mike Penz"
                }
            ],
            "artifactVersion": "12.1.0",
            "description": "AboutLibraries automatically detects all dependencies of a project and collects their information including the license. Optionally visualising it via the provided ui components.",
            "name": "AboutLibraries Core Library",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "com.squareup.okio:okio",
            "developers": [
                {
                    "name": "Square, Inc."
                }
            ],
            "artifactVersion": "3.10.2",
            "description": "A modern I/O library for Android, Java, and Kotlin Multiplatform.",
            "name": "okio",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.coil-kt.coil3:coil",
            "developers": [
                {
                    "name": "Coil Contributors"
                }
            ],
            "artifactVersion": "3.1.0",
            "description": "An image loading library for Android and Compose Multiplatform.",
            "name": "coil",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.coil-kt.coil3:coil-compose",
            "developers": [
                {
                    "name": "Coil Contributors"
                }
            ],
            "artifactVersion": "3.1.0",
            "description": "An image loading library for Android and Compose Multiplatform.",
            "name": "coil-compose",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.coil-kt.coil3:coil-compose-core",
            "developers": [
                {
                    "name": "Coil Contributors"
                }
            ],
            "artifactVersion": "3.1.0",
            "description": "An image loading library for Android and Compose Multiplatform.",
            "name": "coil-compose-core",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.coil-kt.coil3:coil-core",
            "developers": [
                {
                    "name": "Coil Contributors"
                }
            ],
            "artifactVersion": "3.1.0",
            "description": "An image loading library for Android and Compose Multiplatform.",
            "name": "coil-core",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.coil-kt.coil3:coil-network-core",
            "developers": [
                {
                    "name": "Coil Contributors"
                }
            ],
            "artifactVersion": "3.1.0",
            "description": "An image loading library for Android and Compose Multiplatform.",
            "name": "coil-network-core",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.coil-kt.coil3:coil-network-ktor3",
            "developers": [
                {
                    "name": "Coil Contributors"
                }
            ],
            "artifactVersion": "3.1.0",
            "description": "An image loading library for Android and Compose Multiplatform.",
            "name": "coil-network-ktor3",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.insert-koin:koin-android",
            "developers": [
                {
                    "name": "Arnaud Giuliani"
                }
            ],
            "artifactVersion": "4.0.4",
            "description": "KOIN - Kotlin simple Dependency Injection Framework",
            "name": "Koin",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-client-auth",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-client-auth",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-client-cio",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-client-cio",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-client-content-negotiation",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-client-content-negotiation",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-client-core",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-client-core",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-client-encoding",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-client-encoding",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-client-logging",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-client-logging",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-events",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-events",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-http",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-http",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-http-cio",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-http-cio",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-io",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-io",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-network",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-network",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-network-tls",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-network-tls",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-serialization",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-serialization",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-serialization-kotlinx",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-serialization-kotlinx",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-serialization-kotlinx-json",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-serialization-kotlinx-json",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-sse",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-sse",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-utils",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-utils",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-websocket-serialization",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-websocket-serialization",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "io.ktor:ktor-websockets",
            "developers": [
                {
                    "name": "Jetbrains Team"
                }
            ],
            "artifactVersion": "3.1.2",
            "description": "Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.",
            "name": "ktor-websockets",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "javax.inject:javax.inject",
            "developers": [
                
            ],
            "artifactVersion": "1",
            "description": "The javax.inject API",
            "name": "javax.inject",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.core:core-bundle",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.0.1",
            "description": "Provides Bundle in Kotlin Multiplatform projects",
            "name": "androidx.core:core-bundle",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.lifecycle:lifecycle-common",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "2.9.0-alpha06",
            "description": "Android Lifecycle-Common",
            "name": "Lifecycle-Common",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.lifecycle:lifecycle-runtime",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "2.9.0-alpha06",
            "description": "Android Lifecycle Runtime",
            "name": "Lifecycle Runtime",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "2.9.0-alpha06",
            "description": "Compose integration with Lifecycle",
            "name": "Lifecycle Runtime Compose",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "2.9.0-alpha06",
            "description": "Android Lifecycle ViewModel",
            "name": "Lifecycle ViewModel",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "2.9.0-alpha06",
            "description": "Compose integration with Lifecycle ViewModel",
            "name": "Lifecycle ViewModel Compose",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-savedstate",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "2.9.0-alpha06",
            "description": "Android Lifecycle ViewModel",
            "name": "Lifecycle ViewModel with SavedState",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.navigation:navigation-common",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "2.9.0-alpha16",
            "description": "Android Navigation-Common",
            "name": "Navigation Common",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.navigation:navigation-compose",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "2.9.0-alpha16",
            "description": "Compose integration with Navigation",
            "name": "Compose Navigation",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.navigation:navigation-runtime",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "2.9.0-alpha16",
            "description": "Android Navigation-Runtime",
            "name": "Navigation Runtime",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.savedstate:savedstate",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.3.0-alpha06",
            "description": "Android Lifecycle Saved State",
            "name": "Saved State",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.androidx.window:window-core",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.3.1",
            "description": "WindowManager Core Library.",
            "name": "WindowManager Core",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.animation:animation",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose animation library",
            "name": "Compose Animation",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.animation:animation-core",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Animation engine and animation primitives that are the building blocks of the Compose animation library",
            "name": "Compose Animation Core",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.annotation-internal:annotation",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Provides source annotations for tooling and readability.",
            "name": "Annotation",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.collection-internal:collection",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Standalone efficient collections.",
            "name": "collections",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.components:components-resources",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Resources for Compose JB",
            "name": "Resources for Compose JB",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.foundation:foundation",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Higher level abstractions of the Compose UI primitives. This library is design system agnostic, providing the high-level building blocks for both application and design-system developers",
            "name": "Compose Foundation",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.foundation:foundation-layout",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose layout implementations",
            "name": "Compose Layouts",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.material3.adaptive:adaptive",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.1.0-rc01",
            "description": "Compose Material Design Adaptive Library",
            "name": "Material Adaptive",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.material3:material3",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose Material You Design Components library",
            "name": "Compose Material3 Components",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.material3:material3-adaptive-navigation-suite",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose Material Design Adaptive Navigation Suite Library",
            "name": "Material Adaptive Navigation Suite",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.material:material-ripple",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Material ripple used to build interactive components",
            "name": "Compose Material Ripple",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.runtime:runtime",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Tree composition support for code generated by the Compose compiler plugin and corresponding public API",
            "name": "Compose Runtime",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.runtime:runtime-saveable",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose components that allow saving and restoring the local ui state",
            "name": "Compose Saveable",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.ui:ui",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose UI primitives. This library contains the primitives that form the Compose UI Toolkit, such as drawing, measurement and layout.",
            "name": "Compose UI primitives",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.ui:ui-backhandler",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Provides BackHandler in Compose Multiplatform projects",
            "name": "Compose Multiplatform BackHandler",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.ui:ui-geometry",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose classes related to dimensions without units",
            "name": "Compose Geometry",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.ui:ui-graphics",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose graphics",
            "name": "Compose Graphics",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.ui:ui-text",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose Text primitives and utilities",
            "name": "Compose UI Text",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.ui:ui-tooling-preview",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose tooling library API. This library provides the API required to declare @Preview composables in user apps.",
            "name": "Compose UI Preview Tooling",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.ui:ui-unit",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Compose classes for simple units",
            "name": "Compose Unit",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.compose.ui:ui-util",
            "developers": [
                {
                    "name": "Compose Multiplatform Team"
                }
            ],
            "artifactVersion": "1.8.0-rc01",
            "description": "Internal Compose utilities used by other modules",
            "name": "Compose Util",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlin:kotlin-android-extensions-runtime",
            "developers": [
                {
                    "name": "Kotlin Team"
                }
            ],
            "artifactVersion": "1.9.22",
            "description": "Kotlin Android Extensions Runtime",
            "name": "Kotlin Android Extensions Runtime",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlin:kotlin-parcelize-runtime",
            "developers": [
                {
                    "name": "Kotlin Team"
                }
            ],
            "artifactVersion": "1.9.22",
            "description": "Runtime library for the Parcelize compiler plugin",
            "name": "Parcelize Runtime",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlin:kotlin-stdlib",
            "developers": [
                {
                    "name": "Kotlin Team"
                }
            ],
            "artifactVersion": "2.1.20",
            "description": "Kotlin Standard Library",
            "name": "Kotlin Stdlib",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlin:kotlin-stdlib-common",
            "developers": [
                {
                    "name": "Kotlin Team"
                }
            ],
            "artifactVersion": "2.1.20",
            "description": "Kotlin Common Standard Library (legacy, use kotlin-stdlib instead)",
            "name": "Kotlin Stdlib Common",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlin:kotlin-stdlib-jdk7",
            "developers": [
                {
                    "name": "Kotlin Team"
                }
            ],
            "artifactVersion": "1.8.22",
            "description": "Kotlin Standard Library JDK 7 extension",
            "name": "Kotlin Stdlib Jdk7",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
            "developers": [
                {
                    "name": "Kotlin Team"
                }
            ],
            "artifactVersion": "1.8.22",
            "description": "Kotlin Standard Library JDK 8 extension",
            "name": "Kotlin Stdlib Jdk8",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-collections-immutable",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "0.3.8",
            "description": "Kotlin Immutable Collections multiplatform library",
            "name": "kotlinx-collections-immutable",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-coroutines-android",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "1.10.2",
            "description": "Coroutines support libraries for Kotlin",
            "name": "kotlinx-coroutines-android",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-coroutines-core",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "1.10.2",
            "description": "Coroutines support libraries for Kotlin",
            "name": "kotlinx-coroutines-core",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-coroutines-play-services",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "1.10.2",
            "description": "Coroutines support libraries for Kotlin",
            "name": "kotlinx-coroutines-play-services",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "1.10.2",
            "description": "Coroutines support libraries for Kotlin",
            "name": "kotlinx-coroutines-slf4j",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-datetime",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "0.6.2",
            "description": "Kotlin Datetime Library",
            "name": "kotlinx-datetime",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-io-bytestring",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "0.6.0",
            "description": "IO support for Kotlin",
            "name": "kotlinx-io-bytestring",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-io-core",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "0.6.0",
            "description": "IO support for Kotlin",
            "name": "kotlinx-io-core",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-serialization-core",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "1.8.1",
            "description": "Kotlin multiplatform serialization runtime library",
            "name": "kotlinx-serialization-core",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-serialization-json-io",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "1.8.1",
            "description": "Kotlin multiplatform serialization runtime library",
            "name": "kotlinx-serialization-json-io",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "1.8.1",
            "description": "Kotlin multiplatform serialization runtime library",
            "name": "kotlinx-serialization-json",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jetbrains:annotations",
            "developers": [
                {
                    "name": "JetBrains Team"
                }
            ],
            "artifactVersion": "23.0.0",
            "description": "A set of annotations used for code inspection support and code documentation.",
            "name": "JetBrains Java Annotations",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.jspecify:jspecify",
            "developers": [
                {
                    "name": "Kevin Bourrillion"
                }
            ],
            "artifactVersion": "1.0.0",
            "description": "An artifact of well-named and well-specified annotations to power static analysis checks",
            "name": "JSpecify annotations",
            "licenses": [
                "Apache-2.0"
            ]
        },
        {
            "uniqueId": "org.slf4j:slf4j-api",
            "developers": [
                {
                    "name": "Ceki Gulcu"
                }
            ],
            "artifactVersion": "2.0.17",
            "description": "The slf4j API",
            "name": "SLF4J API Module",
            "licenses": [
                "MIT"
            ],
            "organization": {
                "name": "QOS.ch"
            }
        },
        {
            "uniqueId": "org.slf4j:slf4j-nop",
            "developers": [
                {
                    "name": "Ceki Gulcu"
                }
            ],
            "artifactVersion": "2.0.17",
            "description": "SLF4J NOP Provider",
            "name": "SLF4J NOP Provider",
            "licenses": [
                "MIT"
            ],
            "organization": {
                "name": "QOS.ch"
            }
        }
    ],
    "licenses": {
        "ASDKL": {
            "content": "This is the Android Software Development Kit License Agreement\n<br />\n1. Introduction\n<br />\n1.1 The Android Software Development Kit (referred to in the License Agreement as the \"SDK\" and specifically including the Android system files, packaged APIs, and Google APIs add-ons) is licensed to you subject to the terms of the License Agreement. The License Agreement forms a legally binding contract between you and Google in relation to your use of the SDK.\n<br />\n1.2 \"Android\" means the Android software stack for devices, as made available under the Android Open Source Project, which is located at the following URL: http://source.android.com/, as updated from time to time.\n<br />\n1.3 A \"compatible implementation\" means any Android device that (i) complies with the Android Compatibility Definition document, which can be found at the Android compatibility website (http://source.android.com/compatibility) and which may be updated from time to time; and (ii) successfully passes the Android Compatibility Test Suite (CTS).\n<br />\n1.4 \"Google\" means Google LLC, a Delaware corporation with principal place of business at 1600 Amphitheatre Parkway, Mountain View, CA 94043, United States.\n<br />\n2. Accepting this License Agreement\n<br />\n2.1 In order to use the SDK, you must first agree to the License Agreement. You may not use the SDK if you do not accept the License Agreement.\n<br />\n2.2 By clicking to accept, you hereby agree to the terms of the License Agreement.\n<br />\n2.3 You may not use the SDK and may not accept the License Agreement if you are a person barred from receiving the SDK under the laws of the United States or other countries, including the country in which you are resident or from which you use the SDK.\n<br />\n2.4 If you are agreeing to be bound by the License Agreement on behalf of your employer or other entity, you represent and warrant that you have full legal authority to bind your employer or such entity to the License Agreement. If you do not have the requisite authority, you may not accept the License Agreement or use the SDK on behalf of your employer or other entity.\n<br />\n3. SDK License from Google\n<br />\n3.1 Subject to the terms of the License Agreement, Google grants you a limited, worldwide, royalty-free, non-assignable, non-exclusive, and non-sublicensable license to use the SDK solely to develop applications for compatible implementations of Android.\n<br />\n3.2 You may not use this SDK to develop applications for other platforms (including non-compatible implementations of Android) or to develop another SDK. You are of course free to develop applications for other platforms, including non-compatible implementations of Android, provided that this SDK is not used for that purpose.\n<br />\n3.3 You agree that Google or third parties own all legal right, title and interest in and to the SDK, including any Intellectual Property Rights that subsist in the SDK. \"Intellectual Property Rights\" means any and all rights under patent law, copyright law, trade secret law, trademark law, and any and all other proprietary rights. Google reserves all rights not expressly granted to you.\n<br />\n3.4 You may not use the SDK for any purpose not expressly permitted by the License Agreement.  Except to the extent required by applicable third party licenses, you may not copy (except for backup purposes), modify, adapt, redistribute, decompile, reverse engineer, disassemble, or create derivative works of the SDK or any part of the SDK.\n<br />\n3.5 Use, reproduction and distribution of components of the SDK licensed under an open source software license are governed solely by the terms of that open source software license and not the License Agreement.\n<br />\n3.6 You agree that the form and nature of the SDK that Google provides may change without prior notice to you and that future versions of the SDK may be incompatible with applications developed on previous versions of the SDK. You agree that Google may stop (permanently or temporarily) providing the SDK (or any features within the SDK) to you or to users generally at Google's sole discretion, without prior notice to you.\n<br />\n3.7 Nothing in the License Agreement gives you a right to use any of Google's trade names, trademarks, service marks, logos, domain names, or other distinctive brand features.\n<br />\n3.8 You agree that you will not remove, obscure, or alter any proprietary rights notices (including copyright and trademark notices) that may be affixed to or contained within the SDK.\n<br />\n4. Use of the SDK by You\n<br />\n4.1 Google agrees that it obtains no right, title or interest from you (or your licensors) under the License Agreement in or to any software applications that you develop using the SDK, including any intellectual property rights that subsist in those applications.\n<br />\n4.2 You agree to use the SDK and write applications only for purposes that are permitted by (a) the License Agreement and (b) any applicable law, regulation or generally accepted practices or guidelines in the relevant jurisdictions (including any laws regarding the export of data or software to and from the United States or other relevant countries).\n<br />\n4.3 You agree that if you use the SDK to develop applications for general public users, you will protect the privacy and legal rights of those users. If the users provide you with user names, passwords, or other login information or personal information, you must make the users aware that the information will be available to your application, and you must provide legally adequate privacy notice and protection for those users. If your application stores personal or sensitive information provided by users, it must do so securely. If the user provides your application with Google Account information, your application may only use that information to access the user's Google Account when, and for the limited purposes for which, the user has given you permission to do so.\n<br />\n4.4 You agree that you will not engage in any activity with the SDK, including the development or distribution of an application, that interferes with, disrupts, damages, or accesses in an unauthorized manner the servers, networks, or other properties or services of any third party including, but not limited to, Google or any mobile communications carrier.\n<br />\n4.5 You agree that you are solely responsible for (and that Google has no responsibility to you or to any third party for) any data, content, or resources that you create, transmit or display through Android and/or applications for Android, and for the consequences of your actions (including any loss or damage which Google may suffer) by doing so.\n<br />\n4.6 You agree that you are solely responsible for (and that Google has no responsibility to you or to any third party for) any breach of your obligations under the License Agreement, any applicable third party contract or Terms of Service, or any applicable law or regulation, and for the consequences (including any loss or damage which Google or any third party may suffer) of any such breach.\n<br />\n5. Your Developer Credentials\n<br />\n5.1 You agree that you are responsible for maintaining the confidentiality of any developer credentials that may be issued to you by Google or which you may choose yourself and that you will be solely responsible for all applications that are developed under your developer credentials.\n<br />\n6. Privacy and Information\n<br />\n6.1 In order to continually innovate and improve the SDK, Google may collect certain usage statistics from the software including but not limited to a unique identifier, associated IP address, version number of the software, and information on which tools and/or services in the SDK are being used and how they are being used. Before any of this information is collected, the SDK will notify you and seek your consent. If you withhold consent, the information will not be collected.\n<br />\n6.2 The data collected is examined in the aggregate to improve the SDK and is maintained in accordance with Google's Privacy Policy.\n<br />\n7. Third Party Applications\n<br />\n7.1 If you use the SDK to run applications developed by a third party or that access data, content or resources provided by a third party, you agree that Google is not responsible for those applications, data, content, or resources. You understand that all data, content or resources which you may access through such third party applications are the sole responsibility of the person from which they originated and that Google is not liable for any loss or damage that you may experience as a result of the use or access of any of those third party applications, data, content, or resources.\n<br />\n7.2 You should be aware the data, content, and resources presented to you through such a third party application may be protected by intellectual property rights which are owned by the providers (or by other persons or companies on their behalf). You may not modify, rent, lease, loan, sell, distribute or create derivative works based on these data, content, or resources (either in whole or in part) unless you have been specifically given permission to do so by the relevant owners.\n<br />\n7.3 You acknowledge that your use of such third party applications, data, content, or resources may be subject to separate terms between you and the relevant third party. In that case, the License Agreement does not affect your legal relationship with these third parties.\n<br />\n8. Using Android APIs\n<br />\n8.1 Google Data APIs\n<br />\n8.1.1 If you use any API to retrieve data from Google, you acknowledge that the data may be protected by intellectual property rights which are owned by Google or those parties that provide the data (or by other persons or companies on their behalf). Your use of any such API may be subject to additional Terms of Service. You may not modify, rent, lease, loan, sell, distribute or create derivative works based on this data (either in whole or in part) unless allowed by the relevant Terms of Service.\n<br />\n8.1.2 If you use any API to retrieve a user's data from Google, you acknowledge and agree that you shall retrieve data only with the user's explicit consent and only when, and for the limited purposes for which, the user has given you permission to do so. If you use the Android Recognition Service API, documented at the following URL: https://developer.android.com/reference/android/speech/RecognitionService, as updated from time to time, you acknowledge that the use of the API is subject to the Data Processing Addendum for Products where Google is a Data Processor, which is located at the following URL: https://privacy.google.com/businesses/gdprprocessorterms/, as updated from time to time. By clicking to accept, you hereby agree to the terms of the Data Processing Addendum for Products where Google is a Data Processor.\n<br />\n9. Terminating this License Agreement\n<br />\n9.1 The License Agreement will continue to apply until terminated by either you or Google as set out below.\n<br />\n9.2 If you want to terminate the License Agreement, you may do so by ceasing your use of the SDK and any relevant developer credentials.\n<br />\n9.3 Google may at any time, terminate the License Agreement with you if:<br />\n(A) you have breached any provision of the License Agreement; or<br />\n(B) Google is required to do so by law; or<br />\n(C) the partner with whom Google offered certain parts of SDK (such as APIs) to you has terminated its relationship with Google or ceased to offer certain parts of the SDK to you; or<br />\n(D) Google decides to no longer provide the SDK or certain parts of the SDK to users in the country in which you are resident or from which you use the service, or the provision of the SDK or certain SDK services to you by Google is, in Google's sole discretion, no longer commercially viable.<br />\n<br />\n9.4 When the License Agreement comes to an end, all of the legal rights, obligations and liabilities that you and Google have benefited from, been subject to (or which have accrued over time whilst the License Agreement has been in force) or which are expressed to continue indefinitely, shall be unaffected by this cessation, and the provisions of paragraph 14.7 shall continue to apply to such rights, obligations and liabilities indefinitely.\n<br />\n10. DISCLAIMER OF WARRANTIES\n<br />\n10.1 YOU EXPRESSLY UNDERSTAND AND AGREE THAT YOUR USE OF THE SDK IS AT YOUR SOLE RISK AND THAT THE SDK IS PROVIDED \"AS IS\" AND \"AS AVAILABLE\" WITHOUT WARRANTY OF ANY KIND FROM GOOGLE.\n<br />\n10.2 YOUR USE OF THE SDK AND ANY MATERIAL DOWNLOADED OR OTHERWISE OBTAINED THROUGH THE USE OF THE SDK IS AT YOUR OWN DISCRETION AND RISK AND YOU ARE SOLELY RESPONSIBLE FOR ANY DAMAGE TO YOUR COMPUTER SYSTEM OR OTHER DEVICE OR LOSS OF DATA THAT RESULTS FROM SUCH USE.\n<br />\n10.3 GOOGLE FURTHER EXPRESSLY DISCLAIMS ALL WARRANTIES AND CONDITIONS OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO THE IMPLIED WARRANTIES AND CONDITIONS OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.\n<br />\n11. LIMITATION OF LIABILITY\n<br />\n11.1 YOU EXPRESSLY UNDERSTAND AND AGREE THAT GOOGLE, ITS SUBSIDIARIES AND AFFILIATES, AND ITS LICENSORS SHALL NOT BE LIABLE TO YOU UNDER ANY THEORY OF LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL OR EXEMPLARY DAMAGES THAT MAY BE INCURRED BY YOU, INCLUDING ANY LOSS OF DATA, WHETHER OR NOT GOOGLE OR ITS REPRESENTATIVES HAVE BEEN ADVISED OF OR SHOULD HAVE BEEN AWARE OF THE POSSIBILITY OF ANY SUCH LOSSES ARISING.\n<br />\n12. Indemnification\n<br />\n12.1 To the maximum extent permitted by law, you agree to defend, indemnify and hold harmless Google, its affiliates and their respective directors, officers, employees and agents from and against any and all claims, actions, suits or proceedings, as well as any and all losses, liabilities, damages, costs and expenses (including reasonable attorneys fees) arising out of or accruing from (a) your use of the SDK, (b) any application you develop on the SDK that infringes any copyright, trademark, trade secret, trade dress, patent or other intellectual property right of any person or defames any person or violates their rights of publicity or privacy, and (c) any non-compliance by you with the License Agreement.\n<br />\n13. Changes to the License Agreement\n<br />\n13.1 Google may make changes to the License Agreement as it distributes new versions of the SDK. When these changes are made, Google will make a new version of the License Agreement available on the website where the SDK is made available.\n<br />\n14. General Legal Terms\n<br />\n14.1 The License Agreement constitutes the whole legal agreement between you and Google and governs your use of the SDK (excluding any services which Google may provide to you under a separate written agreement), and completely replaces any prior agreements between you and Google in relation to the SDK.\n<br />\n14.2 You agree that if Google does not exercise or enforce any legal right or remedy which is contained in the License Agreement (or which Google has the benefit of under any applicable law), this will not be taken to be a formal waiver of Google's rights and that those rights or remedies will still be available to Google.\n<br />\n14.3 If any court of law, having the jurisdiction to decide on this matter, rules that any provision of the License Agreement is invalid, then that provision will be removed from the License Agreement without affecting the rest of the License Agreement. The remaining provisions of the License Agreement will continue to be valid and enforceable.\n<br />\n14.4 You acknowledge and agree that each member of the group of companies of which Google is the parent shall be third party beneficiaries to the License Agreement and that such other companies shall be entitled to directly enforce, and rely upon, any provision of the License Agreement that confers a benefit on (or rights in favor of) them. Other than this, no other person or company shall be third party beneficiaries to the License Agreement.\n<br />\n14.5 EXPORT RESTRICTIONS. THE SDK IS SUBJECT TO UNITED STATES EXPORT LAWS AND REGULATIONS. YOU MUST COMPLY WITH ALL DOMESTIC AND INTERNATIONAL EXPORT LAWS AND REGULATIONS THAT APPLY TO THE SDK. THESE LAWS INCLUDE RESTRICTIONS ON DESTINATIONS, END USERS AND END USE.\n<br />\n14.6 The rights granted in the License Agreement may not be assigned or transferred by either you or Google without the prior written approval of the other party. Neither you nor Google shall be permitted to delegate their responsibilities or obligations under the License Agreement without the prior written approval of the other party.\n<br />\n14.7 The License Agreement, and your relationship with Google under the License Agreement, shall be governed by the laws of the State of California without regard to its conflict of laws provisions. You and Google agree to submit to the exclusive jurisdiction of the courts located within the county of Santa Clara, California to resolve any legal matter arising from the License Agreement. Notwithstanding this, you agree that Google shall still be allowed to apply for injunctive remedies (or an equivalent type of urgent legal relief) in any jurisdiction.",
            "hash": "ASDKL",
            "internalHash": "ASDKL",
            "url": "https://developer.android.com/studio/terms.html",
            "spdxId": "ASDKL",
            "name": "Android Software Development Kit License Agreement"
        },
        "Apache-2.0": {
            "content": "Apache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n\n     (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and\n\n     (b) You must cause any modified files to carry prominent notices stating that You changed the files; and\n\n     (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\n\n     (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.\n\n     You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\nTo apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!)  The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "hash": "Apache-2.0",
            "internalHash": "Apache-2.0",
            "url": "https://spdx.org/licenses/Apache-2.0.html",
            "spdxId": "Apache-2.0",
            "name": "Apache License 2.0"
        },
        "BSD-3-Clause": {
            "content": "Copyright (c) <<var;name=copyright;original= <year> <owner>;match=.+>>. All rights reserved. \n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. \n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. \n\n3. Neither the name of <<var;name=organizationClause3;original=the copyright holder;match=.+>> nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY <<var;name=copyrightHolderAsIs;original=THE COPYRIGHT HOLDERS AND CONTRIBUTORS;match=.+>> \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL <<var;name=copyrightHolderLiability;original=THE COPYRIGHT HOLDER OR CONTRIBUTORS;match=.+>> BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ",
            "hash": "BSD-3-Clause",
            "internalHash": "BSD-3-Clause",
            "url": "https://spdx.org/licenses/BSD-3-Clause.html",
            "spdxId": "BSD-3-Clause",
            "name": "BSD 3-Clause \"New\" or \"Revised\" License"
        },
        "EPL-1.0": {
            "content": "Eclipse Public License - v 1.0\n\nTHE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC LICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n\n1. DEFINITIONS\n\n\"Contribution\" means:\n     a) in the case of the initial Contributor, the initial code and documentation distributed under this Agreement, and\n     b) in the case of each subsequent Contributor:\n          i) changes to the Program, and\n          ii) additions to the Program;\n\nwhere such changes and/or additions to the Program originate from and are distributed by that particular Contributor. A Contribution 'originates' from a Contributor if it was added to the Program by such Contributor itself or anyone acting on such Contributor's behalf. Contributions do not include additions to the Program which: (i) are separate modules of software distributed in conjunction with the Program under their own license agreement, and (ii) are not derivative works of the Program.\n\"Contributor\" means any person or entity that distributes the Program.\n\n\"Licensed Patents\" mean patent claims licensable by a Contributor which are necessarily infringed by the use or sale of its Contribution alone or when combined with the Program.\n\n\"Program\" means the Contributions distributed in accordance with this Agreement.\n\n\"Recipient\" means anyone who receives the Program under this Agreement, including all Contributors.\n\n2. GRANT OF RIGHTS\n\n     a) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, distribute and sublicense the Contribution of such Contributor, if any, and such derivative works, in source code and object code form.\n \n     b) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free patent license under Licensed Patents to make, use, sell, offer to sell, import and otherwise transfer the Contribution of such Contributor, if any, in source code and object code form. This patent license shall apply to the combination of the Contribution and the Program if, at the time the Contribution is added by the Contributor, such addition of the Contribution causes such combination to be covered by the Licensed Patents. The patent license shall not apply to any other combinations which include the Contribution. No hardware per se is licensed hereunder.\n\n     c) Recipient understands that although each Contributor grants the licenses to its Contributions set forth herein, no assurances are provided by any Contributor that the Program does not infringe the patent or other intellectual property rights of any other entity. Each Contributor disclaims any liability to Recipient for claims brought by any other entity based on infringement of intellectual property rights or otherwise. As a condition to exercising the rights and licenses granted hereunder, each Recipient hereby assumes sole responsibility to secure any other intellectual property rights needed, if any. For example, if a third party patent license is required to allow Recipient to distribute the Program, it is Recipient's responsibility to acquire that license before distributing the Program.\n\n     d) Each Contributor represents that to its knowledge it has sufficient copyright rights in its Contribution, if any, to grant the copyright license set forth in this Agreement.\n\n3. REQUIREMENTS\nA Contributor may choose to distribute the Program in object code form under its own license agreement, provided that:\n\n     a) it complies with the terms and conditions of this Agreement; and\n \n     b) its license agreement:\n          i) effectively disclaims on behalf of all Contributors all warranties and conditions, express and implied, including warranties or conditions of title and non-infringement, and implied warranties or conditions of merchantability and fitness for a particular purpose;\n          ii) effectively excludes on behalf of all Contributors all liability for damages, including direct, indirect, special, incidental and consequential damages, such as lost profits;\n          iii) states that any provisions which differ from this Agreement are offered by that Contributor alone and not by any other party; and\n          iv) states that source code for the Program is available from such Contributor, and informs licensees how to obtain it in a reasonable manner on or through a medium customarily used for software exchange.\n\nWhen the Program is made available in source code form:\n\n     a) it must be made available under this Agreement; and\n\n     b) a copy of this Agreement must be included with each copy of the Program.\nContributors may not remove or alter any copyright notices contained within the Program.\n\nEach Contributor must identify itself as the originator of its Contribution, if any, in a manner that reasonably allows subsequent Recipients to identify the originator of the Contribution.\n\n4. COMMERCIAL DISTRIBUTION\nCommercial distributors of software may accept certain responsibilities with respect to end users, business partners and the like. While this license is intended to facilitate the commercial use of the Program, the Contributor who includes the Program in a commercial product offering should do so in a manner which does not create potential liability for other Contributors. Therefore, if a Contributor includes the Program in a commercial product offering, such Contributor (\"Commercial Contributor\") hereby agrees to defend and indemnify every other Contributor (\"Indemnified Contributor\") against any losses, damages and costs (collectively \"Losses\") arising from claims, lawsuits and other legal actions brought by a third party against the Indemnified Contributor to the extent caused by the acts or omissions of such Commercial Contributor in connection with its distribution of the Program in a commercial product offering. The obligations in this section do not apply to any claims or Losses relating to any actual or alleged intellectual property infringement. In order to qualify, an Indemnified Contributor must: a) promptly notify the Commercial Contributor in writing of such claim, and b) allow the Commercial Contributor to control, and cooperate with the Commercial Contributor in, the defense and any related settlement negotiations. The Indemnified Contributor may participate in any such claim at its own expense.\n\nFor example, a Contributor might include the Program in a commercial product offering, Product X. That Contributor is then a Commercial Contributor. If that Commercial Contributor then makes performance claims, or offers warranties related to Product X, those performance claims and warranties are such Commercial Contributor's responsibility alone. Under this section, the Commercial Contributor would have to defend claims against the other Contributors related to those performance claims and warranties, and if a court requires any other Contributor to pay any damages as a result, the Commercial Contributor must pay those damages.\n\n5. NO WARRANTY\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely responsible for determining the appropriateness of using and distributing the Program and assumes all risks associated with its exercise of rights under this Agreement , including but not limited to the risks and costs of program errors, compliance with applicable laws, damage to or loss of data, programs or equipment, and unavailability or interruption of operations.\n\n6. DISCLAIMER OF LIABILITY\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n7. GENERAL\n\nIf any provision of this Agreement is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this Agreement, and without further action by the parties hereto, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.\n\nIf Recipient institutes patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Program itself (excluding combinations of the Program with other software or hardware) infringes such Recipient's patent(s), then such Recipient's rights granted under Section 2(b) shall terminate as of the date such litigation is filed.\n\nAll Recipient's rights under this Agreement shall terminate if it fails to comply with any of the material terms or conditions of this Agreement and does not cure such failure in a reasonable period of time after becoming aware of such noncompliance. If all Recipient's rights under this Agreement terminate, Recipient agrees to cease use and distribution of the Program as soon as reasonably practicable. However, Recipient's obligations under this Agreement and any licenses granted by Recipient relating to the Program shall continue and survive.\n\nEveryone is permitted to copy and distribute copies of this Agreement, but in order to avoid inconsistency the Agreement is copyrighted and may only be modified in the following manner. The Agreement Steward reserves the right to publish new versions (including revisions) of this Agreement from time to time. No one other than the Agreement Steward has the right to modify this Agreement. The Eclipse Foundation is the initial Agreement Steward. The Eclipse Foundation may assign the responsibility to serve as the Agreement Steward to a suitable separate entity. Each new version of the Agreement will be given a distinguishing version number. The Program (including Contributions) may always be distributed subject to the version of the Agreement under which it was received. In addition, after a new version of the Agreement is published, Contributor may elect to distribute the Program (including its Contributions) under the new version. Except as expressly stated in Sections 2(a) and 2(b) above, Recipient receives no rights or licenses to the intellectual property of any Contributor under this Agreement, whether expressly, by implication, estoppel or otherwise. All rights in the Program not expressly granted under this Agreement are reserved.\n\nThis Agreement is governed by the laws of the State of New York and the intellectual property laws of the United States of America. No party to this Agreement will bring a legal action under this Agreement more than one year after the cause of action arose. Each party waives its rights to a jury trial in any resulting litigation.",
            "hash": "EPL-1.0",
            "internalHash": "EPL-1.0",
            "url": "https://spdx.org/licenses/EPL-1.0.html",
            "spdxId": "EPL-1.0",
            "name": "Eclipse Public License 1.0"
        },
        "MIT": {
            "content": "MIT License\n\nCopyright (c) <year> <copyright holders>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "hash": "MIT",
            "internalHash": "MIT",
            "url": "https://spdx.org/licenses/MIT.html",
            "spdxId": "MIT",
            "name": "MIT License"
        }
    }
}